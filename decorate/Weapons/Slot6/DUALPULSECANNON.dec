//Plasma RIFLES (c) 2014 SGT MARK IV tm

ACTOR DualPulseCannons: DualPBWeapon
{
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.0
	Weapon.AmmoUse1 0 
	Weapon.SelectionOrder 100
	Weapon.AmmoGive1 0 //How much ammo can be gathered with this weapon
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "Cell" //Reserve ammo type
	Weapon.AmmoType2 "DoublePulseCannonAmmo" //Magazine ammo type
	+FLOORCLIP
	+DONTGIB
	Obituary "%o was voided by %k's Double Pulse Cannons" //Kill message
    AttackSound "None" //You better leave this clear
	Tag "Dual Pulse Cannons"
	Inventory.Pickupmessage "" //Pickup message
    +WEAPON.NOAUTOAIM //Makes this weapon never autoaim, so recoil can work better
    Scale 0.6 //Weapon's pickup sprite size
	+WEAPON.NOAUTOFIRE
	+WEAPON.NO_AUTO_SWITCH
	+POWERED_UP
	Weapon.SisterWeapon Plasma_Gun
	States
	{
	
	Spawn:
	TNT1 A 100//Pickup sprite
	Loop
			
	DontFlashClimbing:
	    TNT1 A 9
		Goto Flash

	Ready:
		DPCS ABCDE 1
	Ready3:
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire
		
	Fire:
	TNT1 A 0 A_TakeInventory("StopDualWield", 1)
	DPC2 A 1 
		{
			A_WeaponReady(WRF_NOFIRE);
			A_WeaponOffset(CallACS("Script_GetGunOffsetX"), CallACS("Script_GetGunOffsetY"),WOF_KEEPY);
		}
	Goto ReadyToFire
	
	ReadyToFire:
		DPC2 A 1 A_WeaponReady(WRF_NOFIRE)// Weapon is ready to fire
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		//TNT1 A 0 A_JumpIfInventory("IsFiringSecondary", 1, 1)
		//TNT1 A 0 A_GunFlash
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload2") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("DoGrenade", 1, "ThrowGrenade")//DoMine
		TNT1 A 0 A_JumpIfInventory("DoMine", 1, "ThrowMine")
		TNT1 A 0 A_JumpIfInventory("DoMolotov", 1, "ThrowMolotov")
		TNT1 A 0 A_JumpIfInventory("DoElecPod", 1, "ThrowElecPod")
		TNT1 A 0 A_JumpIfInventory("DoSwarmPod", 1, "ThrowSwarmPod")
		TNT1 A 0 A_JumpIfInventory("DoHealBackpack", 1, "UseHealthBackPack")
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		Loop
		
	NoDualWield:
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		TNT1 A 0 A_SelectWeapon("PulseCannon")
		Goto Select
		
	Deselect:
		TNT1 A 0 A_JumpIfInventory("GotMeatShield", 1, "GrabEnemy")
		TNT1 A 0 A_PlaySound("IronSights", 0)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
		
	Select:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 A 0 A_PlaySound("IronSights", 0)
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 AAAAAAAA 1 A_Raise
		Wait
	
	DryFire:
	    DPC2 D 1 A_PlaySound("DRYFIRE", 1)
		DPC2 A 5
		Goto ReadyToFire

	FireLeftGun:
		TNT1 A 0 A_WeaponOffset(0,32)
	    P2W2 A 0
		TNT1 A 0 A_JumpIfInventory("DoublePulseCannonAmmo", 1, 1)//First of all, checks if there is ammo inside the gun
		Goto Reload//Couldn't find any ammo. Reload
		
		TNT1 A 0 A_JumpIfInventory("LeftPulseCannonAmmo", 1, 1)//Checks if there is ammo inside the left Plasmagun
		Goto DryFire//Couldn't find any ammo. Don't fire.
		
		TNT1 A 0 A_TakeInventory("DoublePulseCannonAmmo", 1)//Removes 1 ammo from magazine
		TNT1 A 0 A_AlertMonsters
	    DPC2 B 1 BRIGHT A_FireCustomMissile("PulseCannonBall", random(-3,3), 0, -6, -4, 0, random(-2,2))//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		TNT1 A 0 A_FireCustomMissile("Shakeyourassminor", 0, 0, 0, 0)//Shakes the camera to simulate recoil.
        TNT1 A 0 A_PlaySound("PAILGF2",3)
		TNT1 A 0 A_SetPitch(+0.6 + pitch)//Vertical recoil up
		DPC2 C 1 BRIGHT //A_FireCustomMissile("PlasmaCaseSpawn",0,0,6,4) //Ejetts empty brass
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -3, 0, 0, 0)
		DPC2 C 0 A_SetPitch(-0.6 + pitch)//Vertical recoil down
		DPC2 D 0 A_TakeInventory("LeftPulseCannonAmmo", 1)//Remove the fake ammo
		TNT1 A 0 A_JumpIfInventory("DoublePulseCannonAmmo", 1, 1)//Checks if there is ammo inside the gun
		Goto Reload//Couldn't find any ammo. Reload.
		P2W2 A 0
		Goto ReadyToFire//No need to reload. Get back to Ready state.
		
	Flash:	
	    TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		DPC1 A 1
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "FireRightGun")
		//P2W1 A 1
		Loop
		
	
	DontFlash:
	    TNT1 A 1
		Goto Flash
		
	
	FireRightGun:
		TNT1 A 0 A_WeaponOffset(0,32)
		
		TNT1 A 0 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		TNT1 A 0 A_GiveInventory("IsFiringSecondary", 1)
		TNT1 A 0 A_JumpIfInventory("DoublePulseCannonAmmo", 1, 2)//First of all, checks if there is ammo inside the gun
		TNT1 A 0 A_GiveInventory("IsReloading", 1)//Couldn't find any ammo. Reload
		Goto Flash//Couldn't find any ammo. Reload
		
		TNT1 A 0 A_JumpIfInventory("PulseCannonAmmo", 1, 1)//Checks if there is ammo inside the left Plasmagun
		Goto DryFire2//Couldn't find any ammo. Don't fire.
		
		
		TNT1 A 0 A_AlertMonsters
	    DPC1 B 1 BRIGHT A_FireCustomMissile("PulseCannonBall", random(-3,3), 0, 6, -4, 0, random(-2,2))//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		TNT1 A 0 A_PlaySound("PAILGF2",3)//Play gun fire sound
		TNT1 A 0 A_FireCustomMissile("Shakeyourassminor", 0, 0, 0, 0)//Shakes the camera to simulate recoil.
		TNT1 A 0 A_SetPitch(+0.6 + pitch)//Vertical recoil up
		DPC1 C 1 BRIGHT //A_FireCustomMissile("PlasmaCaseSpawn",0,0,6,4) //Ejetts empty brass
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 3, 0, 0, 0)
		P2W1 C 0 A_SetPitch(-0.6 + pitch)//Vertical recoil down
		DPC1 D 0 A_TakeInventory("PulseCannonAmmo", 1)//Remove the fake ammo
		DPC1 D 0 A_TakeInventory("RightPulseCannonAmmo", 1)//Remove the fake ammo
		TNT1 A 0 A_TakeInventory("DoublePulseCannonAmmo", 1)//Removes 1 ammo from magazine
		TNT1 A 0 A_JumpIfInventory("DoublePulseCannonAmmo", 1, 1)//Checks if there is ammo inside the gun
		TNT1 A 0 A_GiveInventory("IsReloading", 1)//Couldn't find any ammo. Reload
		
		Goto Flash
		
	DryFIre2:
	    DPC1 D 1 A_PlaySound("DRYFIRE", 1)
		DPC1 AAAAA 1 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		Goto Flash
		
		
	Reload:
	Reload2:
	    
	    DPCS E 0 //Always leave one free line before the reload animation to prevent bugs
		TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
		TNT1 A 0 A_JumpIfInventory("DoublePulseCannonAmmo", 120, "ReadytoFire")//Checks if the weapon is not fully reloaded, if yes, cancel reload.
		TNT1 A 0 A_PlaySound("DRYFIRE", 1)
		TNT1 A 0 A_JumpIfInventory("Cell", 1, 1)//Checks if you have spare ammo
		Goto ReadyToFire//Identified that you have no spare ammo. Get back to Ready animation
		TNT1 A 0 A_GiveInventory("StopDualWield", 1)
        
	Refill:	
	    TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Cell", 1, 1)//Check if you have spare ammo again. This line is necessary in case you don't have enough ammo to fill an entire Cell.
		Goto FinishReload//Gun is fully loaded. Go to finish animation
	    TNT1 A 0 A_TakeInventorY("Cell", 1)//Removes one spare bullet
		TNT1 A 0 A_GiveInventory("DoublePulseCannonAmmo", 1)//Puts one bullet inside the Cell
		TNT1 A 0 A_JumpIfInventory("DoublePulseCannonAmmo", 120, "FinishReload")//Checks if weapons is full
		Loop
		
	 FinishReload:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("LeftPulseCannonAmmo", 60, "FinishReloadRightOnly")
		TNT1 A 0 A_JumpIfInventory("PulseCannonAmmo", 60, "FinishReloadLeftOnly")
		TNT1 A 0 A_GiveInventory("LeftPulseCannonAmmo", 60)
		TNT1 A 0 A_GiveInventory("PulseCannonAmmo", 60)
		TNT1 A 0 A_GiveInventory("RightPulseCannonAmmo", 60)
		DPCS EDCBA 1
		
		TNT1 A 5
		P2CR A 1
		P2CR B 2 A_PlaySound("CELLPKUP", 20)
		P2CR C 1
		P2CR D 2
		P2CR E 1
		P2CR F 2
		P2CR G 1
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_PlaySound("PLSOFF", 1)
		TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
		P2CR HHHHHHHHIJK 2
        P2CR L 1 A_PlaySound("PLREADY", 20)
		P2CR L 1 A_PlaySound("PLSRD", 21)
		P2CR LLMNO 2
		P2CR C 1
		P2CR B 2
		TNT1 A 0 A_PlaySound("PLSCLICK")
		TNT1 A 2
		
		//PZCR A 1
		PZCR B 2 A_PlaySound("CELLPKUP", 20)
		PZCR C 1
		PZCR D 2
		PZCR E 1
		PZCR F 2
		PZCR G 1
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_PlaySound("PLSOFF", 1)
		TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
		PZCR HHHHHHHHIJK 2
        PZCR L 1 A_PlaySound("PLREADY", 20)
		PZCR L 1 A_PlaySound("PLSRD", 21)
		PZCR LLMNO 2
		PZCR C 1
		PZCR B 2
		TNT1 A 0 A_PlaySound("PLSCLICK")
		TNT1 A 2
		
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		TNT1 A 5
		DPCS ABCDE 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire
		
		
		
	
	FinishReloadLeftOnly:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_GiveInventory("LeftPulseCannonAmmo", 60)
		TNT1 A 0 A_GiveInventory("PulseCannonAmmo", 60)
		TNT1 A 0 A_GiveInventory("RightPulseCannonAmmo", 60)
		DPCS EDCBA 1
		TNT1 A 5
		
		P2CR A 1
		P2CR B 2 A_PlaySound("CELLPKUP", 20)
		P2CR C 1
		P2CR D 2
		P2CR E 1
		P2CR F 2
		P2CR G 1
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_PlaySound("PLSOFF", 1)
		TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
		P2CR HHHHHHHHIJK 2
        P2CR L 1 A_PlaySound("PLREADY", 20)
		P2CR L 1 A_PlaySound("PLSRD", 21)
		P2CR LLMNO 2
		P2CR C 1
		P2CR B 2
		TNT1 A 0 A_PlaySound("PLSCLICK")
		P2CR A 2
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		
		DPCS ABCDE 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire	
		
	FinishReloadRightOnly:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_GiveInventory("LeftPulseCannonAmmo", 60)
		TNT1 A 0 A_GiveInventory("PulseCannonAmmo", 60)
		TNT1 A 0 A_GiveInventory("RightPulseCannonAmmo", 60)
		//PZCR A 1
		PZCR B 2 A_PlaySound("CELLPKUP", 20)
		PZCR C 1
		PZCR D 2
		PZCR E 1
		PZCR F 2
		PZCR G 1
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_PlaySound("PLSOFF", 1)
		TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
		PZCR HHHHHHHHIJK 2
        PZCR L 1 A_PlaySound("PLREADY", 20)
		PZCR L 1 A_PlaySound("PLSRD", 21)
		PZCR LLMNO 2
		PZCR C 1
		PZCR B 2
		TNT1 A 0 A_PlaySound("PLSCLICK")
		TNT1 A 2
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		TNT1 A 5
		
		DPCS ABCDE 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire		
		
	FlashKicking:
		DPCS E 1 
		DPCS D 1 
		DPCS C 1 
		DPCS B 3 
		DPCS A 3
		DPCS B 3 
		DPCS C 1 
		DPCS D 1 
		DPCS E 1 
		DPCS EEE 1 
		Goto Flash
		
	FlashAirKicking:
		DPCS E 1 
		DPCS D 1 
		DPCS C 1 
		DPCS B 3 
		DPCS A 3
		DPCS B 3 
		DPCS C 1 
		DPCS D 1 
		DPCS E 1 
		DPCS EEEE 1  
		Goto Flash
		
	FlashSlideKicking:
		DPCS EE 2 
		DPCS DDCCCBBBAAA 2  
		Goto Flash
		
	FlashSlideKickingStop:
		//TNT1 A 0
		DPCS ABCDE 1 
		DPCS EE 1 
		Goto Flash

	Steady:
	TNT1 A 1
	Goto ReadyToFire	
	}
}

ACTOR DoublePulseCannonAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 120 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 120
   Inventory.Icon SMGPA0
}


ACTOR LeftPulseCannonAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 60 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 60
   Inventory.Icon SMGPA0
}


ACTOR RightPulseCannonAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 60 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 60
   Inventory.Icon SMGPA0
}